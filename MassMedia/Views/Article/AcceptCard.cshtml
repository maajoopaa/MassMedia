@model MassMedia.DataAccess.Entities.ArticleEntity

<div class="card bg-dark text-light shadow-lg rounded-4 overflow-hidden mb-4">
    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <img src="@Model.ImageUrl" class="card-img-top object-fit-cover" style="max-height: 250px;" alt="@Model.Head" />
    }

    <div class="card-body">
        <h3 class="card-title">@Model.Head</h3>
        <p class="card-text">@Model.Body</p>

        <div class="mb-3">
            <strong>Дата создания:</strong> @Model.CreatedAt.ToString("dd.MM.yyyy HH:mm")<br />
            @if (Model.CreatedBy != null)
            {
                <strong>Автор:</strong> @Model.CreatedBy.Email

                <br />
            }
            @if (Model.PublishPlace != null)
            {
                <strong>Станция:</strong> @Model.PublishPlace.Title
            }
        </div>

        <div class="d-flex gap-2">
            <button class="btn btn-success w-50" onclick="moderateArticle('@Model.Id', true)">Принять</button>
            <button class="btn btn-danger w-50" onclick="moderateArticle('@Model.Id', false)">Отклонить</button>
        </div>
    </div>
</div>

<script>
    async function moderateArticle(articleId, accept) {
        try {
            const response = await fetch(`/Article/${articleId}/Change-Status?accept=${accept}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
            });

            if (response.ok) {
                location.reload();
            } else {
                const error = await response.text();
                alert("Ошибка: " + error);
            }
        } catch (err) {
            alert("Ошибка запроса: " + err.message);
        }
    }
</script>
