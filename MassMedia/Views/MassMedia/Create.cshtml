@{
    ViewData["Title"] = "Добавить MassMedia";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background-color: #121212;
            color: #e0e0e0;
        }

        .form-floating > label {
            color: #bbb;
        }

        .autocomplete-suggestions {
            background-color: #1f1f1f;
            border: 1px solid #333;
            border-radius: 0.5rem;
            max-height: 150px;
            overflow-y: auto;
            position: absolute;
            z-index: 1000;
            width: 100%;
        }

        .autocomplete-suggestion {
            padding: 0.5rem;
            cursor: pointer;
        }

            .autocomplete-suggestion:hover {
                background-color: #333;
            }

        .worker-badge {
            background-color: #343a40;
            border: 1px solid #555;
            margin: 0.25rem;
        }
    </style>
</head>

<body>
    <div class="d-flex justify-content-center align-items-center" style="min-height: 90vh;">
        <div class="card bg-dark text-light shadow-lg p-4" style="width: 100%; max-width: 600px;">
            <h2 class="text-center mb-4">Добавить MassMedia</h2>

            <form id="massmedia-form">
                <div class="form-floating mb-3">
                    <input type="text" class="form-control bg-dark text-light border-secondary" id="name" minlength="3" placeholder="Название" required>
                    <label for="name">Название</label>
                </div>

                <div class="form-floating mb-3">
                    <input type="text" class="form-control bg-dark text-light border-secondary" id="imageUrl" placeholder="Ссылка на изображение" required>
                    <label for="imageUrl">Ссылка на изображение</label>
                </div>

                <div class="mb-3 position-relative">
                    <label for="user-search" class="form-label">Добавить работника (поиск по почте)</label>
                    <input type="text" class="form-control bg-dark text-light border-secondary" id="user-search" autocomplete="off" placeholder="Введите почту...">
                    <div id="autocomplete-list" class="autocomplete-suggestions"></div>
                </div>

                <div class="mb-3">
                    <label class="form-label">Работники:</label>
                    <div id="selected-users" class="d-flex flex-wrap"></div>
                </div>

                <button type="submit" class="btn btn-outline-light w-100">Создать станцию</button>
            </form>

            <div class="text-center mt-3">
                <a href="/" class="text-decoration-none text-info">Назад</a>
            </div>

        </div>
    </div>

    <script>
        const searchInput = document.getElementById("user-search");
        const autocompleteList = document.getElementById("autocomplete-list");
        const selectedUsersDiv = document.getElementById("selected-users");
        const selectedUsers = new Map();

        searchInput.addEventListener("input", async () => {
            const query = searchInput.value.trim();
            autocompleteList.innerHTML = "";

            if (query.length <= 2) return;

            console.log(searchInput);

            const response = await fetch(`/Account/Search/${query}`);
            if (!response.ok) return;

            const users = await response.json();

            users.forEach(user => {
                if (selectedUsers.has(user.email)) return;

                const suggestion = document.createElement("div");
                suggestion.className = "autocomplete-suggestion";
                suggestion.textContent = `${user.email}`;
                suggestion.addEventListener("click", () => {
                    selectedUsers.set(user.email, user);
                    renderSelectedUsers();
                    autocompleteList.innerHTML = "";
                    searchInput.value = "";
                });

                autocompleteList.appendChild(suggestion);
            });
        });

        function renderSelectedUsers() {
            selectedUsersDiv.innerHTML = "";
            selectedUsers.forEach((user, email) => {
                const badge = document.createElement("span");
                badge.className = "badge rounded-pill worker-badge d-flex align-items-center";
                badge.innerHTML = `
                            ${email}
                            <button type="button" class="btn-close btn-close-white ms-2" aria-label="Удалить"></button>
                        `;
                badge.querySelector("button").addEventListener("click", () => {
                    selectedUsers.delete(email);
                    renderSelectedUsers();
                });
                selectedUsersDiv.appendChild(badge);
            });
        }

        document.getElementById("massmedia-form").addEventListener("submit", async (e) => {
            e.preventDefault();

            const title = document.getElementById("name").value;
            const imageUrl = document.getElementById("imageUrl").value;
            const workers = Array.from(selectedUsers.values());

            const response = await fetch("/Mass-Media", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ title, imageUrl, workers })
            });

            if (response.ok) {
                alert("Станция успешно создана!");
                window.location.href = "/";
            } else {
                alert("Ошибка при создании станции");
            }
        });
    </script>
</body>
